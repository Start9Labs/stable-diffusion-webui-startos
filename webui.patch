From f7ff702fbc42288a7737f93482d698f369a73efa Mon Sep 17 00:00:00 2001
From: Sam Sartor <me@samsartor.com>
Date: Tue, 19 Sep 2023 17:39:40 -0600
Subject: [PATCH 1/3] patches for start9 hide footgun elements

---
 javascript/ui.js  |  1 +
 modules/shared.py |  2 +-
 style.css         | 11 +++++++++++
 webui.py          |  3 ++-
 4 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/javascript/ui.js b/javascript/ui.js
index bfe31525..15949c56 100644
--- a/javascript/ui.js
+++ b/javascript/ui.js
@@ -238,6 +238,7 @@ function restoreProgressImg2img(x){
 onUiLoaded(function () {
     showRestoreProgressButton('txt2img', localStorage.getItem("txt2img_task_id"))
     showRestoreProgressButton('img2img', localStorage.getItem("img2img_task_id"))
+    gradioApp().getElementById(tabname + "_restore_progress").click()
 });
 
 
diff --git a/modules/shared.py b/modules/shared.py
index 8205f6a8..9537ce9e 100644
--- a/modules/shared.py
+++ b/modules/shared.py
@@ -289,7 +289,7 @@ options_templates.update(options_section(('saving-paths', "Paths for saving"), {
     "outdir_grids": OptionInfo("", "Output directory for grids; if empty, defaults to two directories below", component_args=hide_dirs),
     "outdir_txt2img_grids": OptionInfo("outputs/txt2img-grids", 'Output directory for txt2img grids', component_args=hide_dirs),
     "outdir_img2img_grids": OptionInfo("outputs/img2img-grids", 'Output directory for img2img grids', component_args=hide_dirs),
-    "outdir_save": OptionInfo("log/images", "Directory for saving images using the Save button", component_args=hide_dirs),
+    "outdir_save": OptionInfo("saved", "Directory for saving images using the Save button", component_args=hide_dirs),
     "outdir_init_images": OptionInfo("outputs/init-images", "Directory for saving init images when using img2img", component_args=hide_dirs),
 }))
 
diff --git a/style.css b/style.css
index 3f56087a..efba269d 100644
--- a/style.css
+++ b/style.css
@@ -1,3 +1,14 @@
+/*
+   Hack to prevent width/height-batch-size from showing.
+   Because those are footguns on start9's pure server.
+ */
+#txt2img_column_size,
+#txt2img_dimensions_row,
+#img2img_column_size,
+#txt2img_batch_size,
+#img2img_batch_size {
+    display: none;
+}
 
 /* general gradio fixes */
 
diff --git a/webui.py b/webui.py
index 3c7f6555..4fecd3ca 100644
--- a/webui.py
+++ b/webui.py
@@ -329,7 +329,8 @@ def webui():
             debug=cmd_opts.gradio_debug,
             auth=[tuple(cred.split(':')) for cred in gradio_auth_creds] if gradio_auth_creds else None,
             inbrowser=cmd_opts.autolaunch,
-            prevent_thread_lock=True
+            prevent_thread_lock=True,
+            favicon_path="icon.png",
         )
         # after initial launch, disable --autolaunch for subsequent restarts
         cmd_opts.autolaunch = False
-- 
2.39.2


From 41399c78ac8a6aeac562dba551e3c0e3c3502669 Mon Sep 17 00:00:00 2001
From: Matt Hill <matt@start9.com>
Date: Tue, 19 Sep 2023 18:52:30 -0600
Subject: [PATCH 2/3] remove fonts

---
 modules/images.py                            | 6 +-----
 modules/textual_inversion/image_embedding.py | 7 +------
 requirements.txt                             | 2 --
 requirements_versions.txt                    | 2 --
 4 files changed, 2 insertions(+), 15 deletions(-)

diff --git a/modules/images.py b/modules/images.py
index fd173829..06dbebe3 100644
--- a/modules/images.py
+++ b/modules/images.py
@@ -13,7 +13,6 @@ import numpy as np
 import piexif
 import piexif.helper
 from PIL import Image, ImageFont, ImageDraw, PngImagePlugin
-from fonts.ttf import Roboto
 import string
 import json
 import hashlib
@@ -143,10 +142,7 @@ def draw_grid_annotations(im, width, height, hor_texts, ver_texts, margin=0):
         return lines
 
     def get_font(fontsize):
-        try:
-            return ImageFont.truetype(opts.font or Roboto, fontsize)
-        except Exception:
-            return ImageFont.truetype(Roboto, fontsize)
+        return ImageFont.load_default()
 
     def draw_texts(drawing, draw_x, draw_y, lines, initial_fnt, initial_fontsize):
         for i, line in enumerate(lines):
diff --git a/modules/textual_inversion/image_embedding.py b/modules/textual_inversion/image_embedding.py
index 5593f88c..fa9868e9 100644
--- a/modules/textual_inversion/image_embedding.py
+++ b/modules/textual_inversion/image_embedding.py
@@ -3,7 +3,6 @@ import json
 import numpy as np
 import zlib
 from PIL import Image, PngImagePlugin, ImageDraw, ImageFont
-from fonts.ttf import Roboto
 import torch
 from modules.shared import opts
 
@@ -136,11 +135,7 @@ def caption_image_overlay(srcimage, title, footerLeft, footerMid, footerRight, t
     image = srcimage.copy()
     fontsize = 32
     if textfont is None:
-        try:
-            textfont = ImageFont.truetype(opts.font or Roboto, fontsize)
-            textfont = opts.font or Roboto
-        except Exception:
-            textfont = Roboto
+        textfont = ImageFont.load_default()
 
     factor = 1.5
     gradient = Image.new('RGBA', (1, image.size[1]), color=(0, 0, 0, 0))
diff --git a/requirements.txt b/requirements.txt
index c08c82d7..ad1cc903 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -2,8 +2,6 @@ astunparse
 blendmodes
 accelerate
 basicsr
-fonts
-font-roboto
 gfpgan
 gradio==3.28.1
 numpy
diff --git a/requirements_versions.txt b/requirements_versions.txt
index cfdce216..eed2fd84 100644
--- a/requirements_versions.txt
+++ b/requirements_versions.txt
@@ -11,8 +11,6 @@ torch
 omegaconf==2.2.3
 pytorch_lightning==1.9.4
 scikit-image==0.19.2
-fonts
-font-roboto
 timm==0.6.7
 piexif==1.1.3
 einops==0.4.1
-- 
2.39.2


From ecfdff0950b9905dbccb31dcc9a00bf947e56601 Mon Sep 17 00:00:00 2001
From: Aiden McClelland <me@drbonez.dev>
Date: Tue, 19 Sep 2023 19:04:10 -0600
Subject: [PATCH 3/3] remove scripts and links from external sources

---
 modules/ui.py | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/modules/ui.py b/modules/ui.py
index 7b45f131..f1e5542b 100644
--- a/modules/ui.py
+++ b/modules/ui.py
@@ -5,6 +5,7 @@ import mimetypes
 import os
 import platform
 import random
+import re
 import sys
 import tempfile
 import time
@@ -1907,6 +1908,8 @@ def reload_javascript():
 
     def template_response(*args, **kwargs):
         res = shared.GradioTemplateResponseOriginal(*args, **kwargs)
+        res.body = re.sub(b'<script\\s[^>]*src="https:\\/\\/[^"]+"[^>]*>\\s*<\\/script>', b'', res.body)
+        res.body = re.sub(b'<link\\s[^>]*href="https:\\/\\/[^"]+"[^>]*>', b'', res.body)
         res.body = res.body.replace(b'</head>', f'{js}</head>'.encode("utf8"))
         res.body = res.body.replace(b'</body>', f'{css}</body>'.encode("utf8"))
         res.init_headers()
-- 
2.39.2

